// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.26.0
// source: proto/IMCloudPBMessage.proto

package generate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NOTE:
// 0    ~ 5000  : 为命令消息
// 5000 ~ 10000 : 具体的消息
type Cmd int32

const (
	Cmd_LoginCmd           Cmd = 0    ///< 登录
	Cmd_LogoutCmd          Cmd = 1    ///< 退出
	Cmd_KeepAliveCmd       Cmd = 2    ///< 保活命令
	Cmd_RegisterCmd        Cmd = 3    ///< 注册命令
	Cmd_SendTextMessageCmd Cmd = 5001 ///< 发送文本消息
)

// Enum value maps for Cmd.
var (
	Cmd_name = map[int32]string{
		0:    "LoginCmd",
		1:    "LogoutCmd",
		2:    "KeepAliveCmd",
		3:    "RegisterCmd",
		5001: "SendTextMessageCmd",
	}
	Cmd_value = map[string]int32{
		"LoginCmd":           0,
		"LogoutCmd":          1,
		"KeepAliveCmd":       2,
		"RegisterCmd":        3,
		"SendTextMessageCmd": 5001,
	}
)

func (x Cmd) Enum() *Cmd {
	p := new(Cmd)
	*p = x
	return p
}

func (x Cmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cmd) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_IMCloudPBMessage_proto_enumTypes[0].Descriptor()
}

func (Cmd) Type() protoreflect.EnumType {
	return &file_proto_IMCloudPBMessage_proto_enumTypes[0]
}

func (x Cmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cmd.Descriptor instead.
func (Cmd) EnumDescriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{0}
}

type IMCloudPbMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRequest    bool                          `protobuf:"varint,1,opt,name=IsRequest,proto3" json:"IsRequest,omitempty"`
	CmdType      Cmd                           `protobuf:"varint,2,opt,name=CmdType,proto3,enum=IMCloudPbMesage.Cmd" json:"CmdType,omitempty"`
	RequestBody  *IMCloudPbMessageRequestBody  `protobuf:"bytes,3,opt,name=requestBody,proto3" json:"requestBody,omitempty"`
	ResponseBody *IMCloudPbMessageResponseBody `protobuf:"bytes,4,opt,name=responseBody,proto3" json:"responseBody,omitempty"`
}

func (x *IMCloudPbMessage) Reset() {
	*x = IMCloudPbMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMCloudPbMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMCloudPbMessage) ProtoMessage() {}

func (x *IMCloudPbMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMCloudPbMessage.ProtoReflect.Descriptor instead.
func (*IMCloudPbMessage) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{0}
}

func (x *IMCloudPbMessage) GetIsRequest() bool {
	if x != nil {
		return x.IsRequest
	}
	return false
}

func (x *IMCloudPbMessage) GetCmdType() Cmd {
	if x != nil {
		return x.CmdType
	}
	return Cmd_LoginCmd
}

func (x *IMCloudPbMessage) GetRequestBody() *IMCloudPbMessageRequestBody {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *IMCloudPbMessage) GetResponseBody() *IMCloudPbMessageResponseBody {
	if x != nil {
		return x.ResponseBody
	}
	return nil
}

type IMCloudPbMessageRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterRequestBody        *RegisterRequest        `protobuf:"bytes,1,opt,name=RegisterRequestBody,proto3" json:"RegisterRequestBody,omitempty"`
	LoginRequestBody           *LoginRequest           `protobuf:"bytes,2,opt,name=LoginRequestBody,proto3" json:"LoginRequestBody,omitempty"`
	LogoutRequestBody          *LogoutRequest          `protobuf:"bytes,3,opt,name=LogoutRequestBody,proto3" json:"LogoutRequestBody,omitempty"`
	KeepAliveRequestBody       *KeepAliveRequest       `protobuf:"bytes,4,opt,name=KeepAliveRequestBody,proto3" json:"KeepAliveRequestBody,omitempty"`
	SendTextMessageRequestBody *SendTextMessageRequest `protobuf:"bytes,5,opt,name=SendTextMessageRequestBody,proto3" json:"SendTextMessageRequestBody,omitempty"`
}

func (x *IMCloudPbMessageRequestBody) Reset() {
	*x = IMCloudPbMessageRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMCloudPbMessageRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMCloudPbMessageRequestBody) ProtoMessage() {}

func (x *IMCloudPbMessageRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMCloudPbMessageRequestBody.ProtoReflect.Descriptor instead.
func (*IMCloudPbMessageRequestBody) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{1}
}

func (x *IMCloudPbMessageRequestBody) GetRegisterRequestBody() *RegisterRequest {
	if x != nil {
		return x.RegisterRequestBody
	}
	return nil
}

func (x *IMCloudPbMessageRequestBody) GetLoginRequestBody() *LoginRequest {
	if x != nil {
		return x.LoginRequestBody
	}
	return nil
}

func (x *IMCloudPbMessageRequestBody) GetLogoutRequestBody() *LogoutRequest {
	if x != nil {
		return x.LogoutRequestBody
	}
	return nil
}

func (x *IMCloudPbMessageRequestBody) GetKeepAliveRequestBody() *KeepAliveRequest {
	if x != nil {
		return x.KeepAliveRequestBody
	}
	return nil
}

func (x *IMCloudPbMessageRequestBody) GetSendTextMessageRequestBody() *SendTextMessageRequest {
	if x != nil {
		return x.SendTextMessageRequestBody
	}
	return nil
}

type IMCloudPbMessageResponseBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisterResponseBody        *RegisterResponse        `protobuf:"bytes,1,opt,name=RegisterResponseBody,proto3" json:"RegisterResponseBody,omitempty"`
	LoginResponseBody           *LoginResponse           `protobuf:"bytes,2,opt,name=LoginResponseBody,proto3" json:"LoginResponseBody,omitempty"`
	LogoutResponseBody          *LogoutResponse          `protobuf:"bytes,3,opt,name=LogoutResponseBody,proto3" json:"LogoutResponseBody,omitempty"`
	KeepAliveResponseBody       *KeepAliveResponse       `protobuf:"bytes,4,opt,name=KeepAliveResponseBody,proto3" json:"KeepAliveResponseBody,omitempty"`
	SendTextMessageResponseBody *SendTextMessageResponse `protobuf:"bytes,5,opt,name=SendTextMessageResponseBody,proto3" json:"SendTextMessageResponseBody,omitempty"`
}

func (x *IMCloudPbMessageResponseBody) Reset() {
	*x = IMCloudPbMessageResponseBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMCloudPbMessageResponseBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMCloudPbMessageResponseBody) ProtoMessage() {}

func (x *IMCloudPbMessageResponseBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMCloudPbMessageResponseBody.ProtoReflect.Descriptor instead.
func (*IMCloudPbMessageResponseBody) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{2}
}

func (x *IMCloudPbMessageResponseBody) GetRegisterResponseBody() *RegisterResponse {
	if x != nil {
		return x.RegisterResponseBody
	}
	return nil
}

func (x *IMCloudPbMessageResponseBody) GetLoginResponseBody() *LoginResponse {
	if x != nil {
		return x.LoginResponseBody
	}
	return nil
}

func (x *IMCloudPbMessageResponseBody) GetLogoutResponseBody() *LogoutResponse {
	if x != nil {
		return x.LogoutResponseBody
	}
	return nil
}

func (x *IMCloudPbMessageResponseBody) GetKeepAliveResponseBody() *KeepAliveResponse {
	if x != nil {
		return x.KeepAliveResponseBody
	}
	return nil
}

func (x *IMCloudPbMessageResponseBody) GetSendTextMessageResponseBody() *SendTextMessageResponse {
	if x != nil {
		return x.SendTextMessageResponseBody
	}
	return nil
}

// NOTE: LoginCmd  -------------------------------------
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint64 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	PassWord string `protobuf:"bytes,3,opt,name=PassWord,proto3" json:"PassWord,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LoginRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginRequest) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool   `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`                  ///< 是否登录成功
	CodeState   int32  `protobuf:"varint,2,opt,name=CodeState,proto3" json:"CodeState,omitempty"`    ///< 状态码
	StringState string `protobuf:"bytes,3,opt,name=StringState,proto3" json:"StringState,omitempty"` ///< 状态码 字符串描述
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{4}
}

func (x *LoginResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LoginResponse) GetCodeState() int32 {
	if x != nil {
		return x.CodeState
	}
	return 0
}

func (x *LoginResponse) GetStringState() string {
	if x != nil {
		return x.StringState
	}
	return ""
}

// Note: LogoutCmd  -----------------------------------
type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool   `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`                  ///< 是否推出成功
	CodeState   int32  `protobuf:"varint,2,opt,name=CodeState,proto3" json:"CodeState,omitempty"`    ///< 状态码
	StringState string `protobuf:"bytes,3,opt,name=StringState,proto3" json:"StringState,omitempty"` ///< 状态码 字符串描述
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{6}
}

func (x *LogoutResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *LogoutResponse) GetCodeState() int32 {
	if x != nil {
		return x.CodeState
	}
	return 0
}

func (x *LogoutResponse) GetStringState() string {
	if x != nil {
		return x.StringState
	}
	return ""
}

// Note: KeepAliveCmd ---------------------------------
// Revert : 注释有 Revert 标记的则表明 服务端为请求方，客户端为响应方。 默认情况下客户端为请求方，服务端为响应方
type KeepAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *KeepAliveRequest) Reset() {
	*x = KeepAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveRequest) ProtoMessage() {}

func (x *KeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveRequest.ProtoReflect.Descriptor instead.
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{7}
}

func (x *KeepAliveRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// Revert
type KeepAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAliving bool `protobuf:"varint,1,opt,name=isAliving,proto3" json:"isAliving,omitempty"`
}

func (x *KeepAliveResponse) Reset() {
	*x = KeepAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResponse) ProtoMessage() {}

func (x *KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveResponse.ProtoReflect.Descriptor instead.
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{8}
}

func (x *KeepAliveResponse) GetIsAliving() bool {
	if x != nil {
		return x.IsAliving
	}
	return false
}

// Note: SendTextMessageCmd ---------------------------
type SendTextMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送方
	SenderUid uint64 `protobuf:"varint,1,opt,name=SenderUid,proto3" json:"SenderUid,omitempty"`
	// 接受方
	ReceiverUid uint64 `protobuf:"varint,2,opt,name=ReceiverUid,proto3" json:"ReceiverUid,omitempty"`
	// 客户端发送的时间
	SendTimeForSender int64 `protobuf:"varint,3,opt,name=SendTimeForSender,proto3" json:"SendTimeForSender,omitempty"`
	// 发送的具体消息
	TextMessage string `protobuf:"bytes,4,opt,name=TextMessage,proto3" json:"TextMessage,omitempty"`
}

func (x *SendTextMessageRequest) Reset() {
	*x = SendTextMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextMessageRequest) ProtoMessage() {}

func (x *SendTextMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextMessageRequest.ProtoReflect.Descriptor instead.
func (*SendTextMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{9}
}

func (x *SendTextMessageRequest) GetSenderUid() uint64 {
	if x != nil {
		return x.SenderUid
	}
	return 0
}

func (x *SendTextMessageRequest) GetReceiverUid() uint64 {
	if x != nil {
		return x.ReceiverUid
	}
	return 0
}

func (x *SendTextMessageRequest) GetSendTimeForSender() int64 {
	if x != nil {
		return x.SendTimeForSender
	}
	return 0
}

func (x *SendTextMessageRequest) GetTextMessage() string {
	if x != nil {
		return x.TextMessage
	}
	return ""
}

type SendTextMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否发送成功
	Ok bool `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	// 状态码
	CodeState int64 `protobuf:"varint,2,opt,name=CodeState,proto3" json:"CodeState,omitempty"`
	// 状态码 字符串描述
	StringState string `protobuf:"bytes,3,opt,name=StringState,proto3" json:"StringState,omitempty"`
}

func (x *SendTextMessageResponse) Reset() {
	*x = SendTextMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextMessageResponse) ProtoMessage() {}

func (x *SendTextMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextMessageResponse.ProtoReflect.Descriptor instead.
func (*SendTextMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{10}
}

func (x *SendTextMessageResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SendTextMessageResponse) GetCodeState() int64 {
	if x != nil {
		return x.CodeState
	}
	return 0
}

func (x *SendTextMessageResponse) GetStringState() string {
	if x != nil {
		return x.StringState
	}
	return ""
}

// Note: RegisterCmd ---------------------------------
type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名
	UserName string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	// 密码
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否注册成功
	Ok bool `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	// 状态码
	CodeState int64 `protobuf:"varint,2,opt,name=CodeState,proto3" json:"CodeState,omitempty"`
	// 状态码 字符串描述
	StringState string `protobuf:"bytes,3,opt,name=StringState,proto3" json:"StringState,omitempty"`
	// 生成的用户id
	Uid uint64 `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_IMCloudPBMessage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_IMCloudPBMessage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_IMCloudPBMessage_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RegisterResponse) GetCodeState() int64 {
	if x != nil {
		return x.CodeState
	}
	return 0
}

func (x *RegisterResponse) GetStringState() string {
	if x != nil {
		return x.StringState
	}
	return ""
}

func (x *RegisterResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_proto_IMCloudPBMessage_proto protoreflect.FileDescriptor

var file_proto_IMCloudPBMessage_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50,
	0x42, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x83, 0x02, 0x0a, 0x10, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d,
	0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x52, 0x07, 0x43, 0x6d, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x51, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xca, 0x03, 0x0a, 0x1b, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x52, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x49, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d,
	0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x4c, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x11, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x55, 0x0a, 0x14, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x14, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x67, 0x0a, 0x1a, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f,
	0x64, 0x79, 0x22, 0xda, 0x03, 0x0a, 0x1c, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x55, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x4c, 0x0a, 0x11, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50,
	0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x4f, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x62,
	0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x58, 0x0a, 0x15, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x4b, 0x65,
	0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x6a, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x49, 0x4d, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x62, 0x4d, 0x65, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x22,
	0x58, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x5f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x60, 0x0a,
	0x0e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x24, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x41, 0x6c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x41, 0x6c, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x55, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x6f, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x49,
	0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x74, 0x0a, 0x10, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x4f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69, 0x64, 0x2a,
	0x5e, 0x0a, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x6d, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x43, 0x6d,
	0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x43, 0x6d, 0x64, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6d, 0x64, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6d, 0x64, 0x10, 0x89, 0x27, 0x42,
	0x0d, 0x5a, 0x0b, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_IMCloudPBMessage_proto_rawDescOnce sync.Once
	file_proto_IMCloudPBMessage_proto_rawDescData = file_proto_IMCloudPBMessage_proto_rawDesc
)

func file_proto_IMCloudPBMessage_proto_rawDescGZIP() []byte {
	file_proto_IMCloudPBMessage_proto_rawDescOnce.Do(func() {
		file_proto_IMCloudPBMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_IMCloudPBMessage_proto_rawDescData)
	})
	return file_proto_IMCloudPBMessage_proto_rawDescData
}

var file_proto_IMCloudPBMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_IMCloudPBMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_IMCloudPBMessage_proto_goTypes = []interface{}{
	(Cmd)(0),                             // 0: IMCloudPbMesage.Cmd
	(*IMCloudPbMessage)(nil),             // 1: IMCloudPbMesage.IMCloudPbMessage
	(*IMCloudPbMessageRequestBody)(nil),  // 2: IMCloudPbMesage.IMCloudPbMessageRequestBody
	(*IMCloudPbMessageResponseBody)(nil), // 3: IMCloudPbMesage.IMCloudPbMessageResponseBody
	(*LoginRequest)(nil),                 // 4: IMCloudPbMesage.LoginRequest
	(*LoginResponse)(nil),                // 5: IMCloudPbMesage.LoginResponse
	(*LogoutRequest)(nil),                // 6: IMCloudPbMesage.LogoutRequest
	(*LogoutResponse)(nil),               // 7: IMCloudPbMesage.LogoutResponse
	(*KeepAliveRequest)(nil),             // 8: IMCloudPbMesage.KeepAliveRequest
	(*KeepAliveResponse)(nil),            // 9: IMCloudPbMesage.KeepAliveResponse
	(*SendTextMessageRequest)(nil),       // 10: IMCloudPbMesage.SendTextMessageRequest
	(*SendTextMessageResponse)(nil),      // 11: IMCloudPbMesage.SendTextMessageResponse
	(*RegisterRequest)(nil),              // 12: IMCloudPbMesage.RegisterRequest
	(*RegisterResponse)(nil),             // 13: IMCloudPbMesage.RegisterResponse
}
var file_proto_IMCloudPBMessage_proto_depIdxs = []int32{
	0,  // 0: IMCloudPbMesage.IMCloudPbMessage.CmdType:type_name -> IMCloudPbMesage.Cmd
	2,  // 1: IMCloudPbMesage.IMCloudPbMessage.requestBody:type_name -> IMCloudPbMesage.IMCloudPbMessageRequestBody
	3,  // 2: IMCloudPbMesage.IMCloudPbMessage.responseBody:type_name -> IMCloudPbMesage.IMCloudPbMessageResponseBody
	12, // 3: IMCloudPbMesage.IMCloudPbMessageRequestBody.RegisterRequestBody:type_name -> IMCloudPbMesage.RegisterRequest
	4,  // 4: IMCloudPbMesage.IMCloudPbMessageRequestBody.LoginRequestBody:type_name -> IMCloudPbMesage.LoginRequest
	6,  // 5: IMCloudPbMesage.IMCloudPbMessageRequestBody.LogoutRequestBody:type_name -> IMCloudPbMesage.LogoutRequest
	8,  // 6: IMCloudPbMesage.IMCloudPbMessageRequestBody.KeepAliveRequestBody:type_name -> IMCloudPbMesage.KeepAliveRequest
	10, // 7: IMCloudPbMesage.IMCloudPbMessageRequestBody.SendTextMessageRequestBody:type_name -> IMCloudPbMesage.SendTextMessageRequest
	13, // 8: IMCloudPbMesage.IMCloudPbMessageResponseBody.RegisterResponseBody:type_name -> IMCloudPbMesage.RegisterResponse
	5,  // 9: IMCloudPbMesage.IMCloudPbMessageResponseBody.LoginResponseBody:type_name -> IMCloudPbMesage.LoginResponse
	7,  // 10: IMCloudPbMesage.IMCloudPbMessageResponseBody.LogoutResponseBody:type_name -> IMCloudPbMesage.LogoutResponse
	9,  // 11: IMCloudPbMesage.IMCloudPbMessageResponseBody.KeepAliveResponseBody:type_name -> IMCloudPbMesage.KeepAliveResponse
	11, // 12: IMCloudPbMesage.IMCloudPbMessageResponseBody.SendTextMessageResponseBody:type_name -> IMCloudPbMesage.SendTextMessageResponse
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_IMCloudPBMessage_proto_init() }
func file_proto_IMCloudPBMessage_proto_init() {
	if File_proto_IMCloudPBMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_IMCloudPBMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMCloudPbMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMCloudPbMessageRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMCloudPbMessageResponseBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_IMCloudPBMessage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_IMCloudPBMessage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_IMCloudPBMessage_proto_goTypes,
		DependencyIndexes: file_proto_IMCloudPBMessage_proto_depIdxs,
		EnumInfos:         file_proto_IMCloudPBMessage_proto_enumTypes,
		MessageInfos:      file_proto_IMCloudPBMessage_proto_msgTypes,
	}.Build()
	File_proto_IMCloudPBMessage_proto = out.File
	file_proto_IMCloudPBMessage_proto_rawDesc = nil
	file_proto_IMCloudPBMessage_proto_goTypes = nil
	file_proto_IMCloudPBMessage_proto_depIdxs = nil
}
